// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard Component renders correctly 1`] = `
<div
  className="canvas2"
  id="dashboard"
>
  <div
    className="container3"
  >
    <header
      className="header extra"
    >
      <Connect(Nav) />
    </header>
    <main>
      <Greeting
        firstName="user"
        isCaterer={true}
      />
      <div
        className="flexbox"
      >
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              2
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="cutlery"
                className="responsive-img"
                src="./images/food.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Orders
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              1
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="head profile"
                className="responsive-img"
                src="./images/profile.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Customer(s)
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              ₦
              100
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="upward stock chart"
                className="responsive-img"
                src="./images/chart.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Total Sales
          </h5>
        </div>
      </div>
      <div
        className="order_detail flexbox title-element"
      >
        <h5>
          Order History
        </h5>
        <Search
          caseSensitive={false}
          className="search-input input-field"
          fuzzy={false}
          onChange={[Function]}
          throttle={200}
        />
      </div>
      <AccordionWrapper
        accordion={false}
        className="accordion"
        onChange={[Function]}
      >
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={true}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          />
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <div />
            <DashboardTableContainer
              getOrderMeals={[Function]}
              getOrderMealsTotals={[Function]}
              loading={false}
              onFetchData={[Function]}
              orders={
                Array [
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order1",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order2",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order3",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                ]
              }
              pagination={
                Object {
                  "limit": 10,
                  "offset": 0,
                  "pages": 1,
                }
              }
            />
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
      </AccordionWrapper>
    </main>
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="modal-content"
      closeTimeoutMS={0}
      contentLabel="Input Modal"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "width": "60%",
          },
        }
      }
    >
      <MealsTable
        closeMealDetailModal={[Function]}
        getTrProps={[Function]}
        loading={false}
        meals={
          Array [
            Object {
              "description": "nice",
              "id": "meal1",
              "imageUrl": "nice",
              "price": 1200,
              "title": "Eba and Egusi",
              "userId": "user1",
            },
            Object {
              "description": "nice",
              "id": "meal2",
              "imageUrl": "nice",
              "price": 2000,
              "title": "Rice and Stew",
              "userId": "user1",
            },
          ]
        }
        mealsPagination={
          Object {
            "limit": 5,
            "offset": 0,
            "pages": 1,
          }
        }
        onFetchData={[Function]}
        total={
          Object {
            "orders": 2,
            "revenue": 100,
            "users": 1,
          }
        }
      />
    </Modal>
  </div>
</div>
`;

exports[`Dashboard Component renders correctly 2`] = `
<div
  className="canvas2"
  id="dashboard"
>
  <div
    className="container3"
  >
    <header
      className="header extra"
    >
      <Connect(Nav) />
    </header>
    <main>
      <Greeting
        firstName="user"
        isCaterer={true}
      />
      <div
        className="flexbox"
      >
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              2
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="cutlery"
                className="responsive-img"
                src="./images/food.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Orders
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              1
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="head profile"
                className="responsive-img"
                src="./images/profile.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Customer(s)
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              ₦
              100
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="upward stock chart"
                className="responsive-img"
                src="./images/chart.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Total Sales
          </h5>
        </div>
      </div>
      <div
        className="order_detail flexbox title-element"
      >
        <h5>
          Order History
        </h5>
        <Search
          caseSensitive={false}
          className="search-input input-field"
          fuzzy={false}
          onChange={[Function]}
          throttle={200}
        />
      </div>
      <AccordionWrapper
        accordion={false}
        className="accordion"
        onChange={[Function]}
      >
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={true}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          />
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <div />
            <div>
              No orders have been placed for your meals today
            </div>
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
      </AccordionWrapper>
    </main>
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="modal-content"
      closeTimeoutMS={0}
      contentLabel="Input Modal"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "width": "60%",
          },
        }
      }
    >
      <MealsTable
        closeMealDetailModal={[Function]}
        getTrProps={[Function]}
        loading={false}
        meals={
          Array [
            Object {
              "description": "nice",
              "id": "meal1",
              "imageUrl": "nice",
              "price": 1200,
              "title": "Eba and Egusi",
              "userId": "user1",
            },
            Object {
              "description": "nice",
              "id": "meal2",
              "imageUrl": "nice",
              "price": 2000,
              "title": "Rice and Stew",
              "userId": "user1",
            },
          ]
        }
        mealsPagination={
          Object {
            "limit": 5,
            "offset": 0,
            "pages": 1,
          }
        }
        onFetchData={[Function]}
        total={
          Object {
            "orders": 2,
            "revenue": 100,
            "users": 1,
          }
        }
      />
    </Modal>
  </div>
</div>
`;

exports[`Dashboard Component renders correctly 3`] = `
<div
  className="canvas2"
  id="dashboard"
>
  <div
    className="container3"
  >
    <header
      className="header extra"
    >
      <Connect(Nav) />
    </header>
    <main>
      <Greeting
        firstName="user"
        isCaterer={true}
      />
      <div
        className="flexbox"
      >
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              2
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="cutlery"
                className="responsive-img"
                src="./images/food.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Orders
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              1
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="head profile"
                className="responsive-img"
                src="./images/profile.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Customer(s)
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              ₦
              100
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="upward stock chart"
                className="responsive-img"
                src="./images/chart.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Total Sales
          </h5>
        </div>
      </div>
      <div
        className="order_detail flexbox title-element"
      >
        <h5>
          Order History
        </h5>
        <Search
          caseSensitive={false}
          className="search-input input-field"
          fuzzy={false}
          onChange={[Function]}
          throttle={200}
        />
      </div>
      <AccordionWrapper
        accordion={false}
        className="accordion"
        onChange={[Function]}
      >
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={true}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          />
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <div />
            <DashboardTableContainer
              getOrderMeals={[Function]}
              getOrderMealsTotals={[Function]}
              loading={false}
              onFetchData={[Function]}
              orders={
                Array [
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order1",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order2",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order3",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                ]
              }
              pagination={
                Object {
                  "limit": 10,
                  "offset": 0,
                  "pages": 1,
                }
              }
            />
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
      </AccordionWrapper>
    </main>
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="modal-content"
      closeTimeoutMS={0}
      contentLabel="Input Modal"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "width": "60%",
          },
        }
      }
    >
      <MealsTable
        closeMealDetailModal={[Function]}
        getTrProps={[Function]}
        loading={false}
        meals={
          Array [
            Object {
              "description": "nice",
              "id": "meal1",
              "imageUrl": "nice",
              "price": 1200,
              "title": "Eba and Egusi",
              "userId": "user1",
            },
            Object {
              "description": "nice",
              "id": "meal2",
              "imageUrl": "nice",
              "price": 2000,
              "title": "Rice and Stew",
              "userId": "user1",
            },
          ]
        }
        mealsPagination={
          Object {
            "pages": 1,
          }
        }
        onFetchData={[Function]}
        total={
          Object {
            "orders": 2,
            "revenue": 100,
            "users": 1,
          }
        }
      />
    </Modal>
  </div>
</div>
`;

exports[`Dashboard Component renders correctly 4`] = `
<div
  className="canvas2"
  id="dashboard"
>
  <div
    className="container3"
  >
    <header
      className="header extra"
    >
      <Connect(Nav) />
    </header>
    <main>
      <Greeting
        firstName="user"
        isCaterer={true}
      />
      <div
        className="flexbox"
      >
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              2
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="cutlery"
                className="responsive-img"
                src="./images/food.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Orders
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              1
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="head profile"
                className="responsive-img"
                src="./images/profile.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Customer(s)
          </h5>
        </div>
        <div
          className="card order_summary"
        >
          <div
            className="flexbox"
          >
            <span
              className="order_span summary_value flow-text"
            >
              ₦
              100
            </span>
            <span
              className="order_span shrink"
            >
              <img
                alt="upward stock chart"
                className="responsive-img"
                src="./images/chart.png"
              />
            </span>
          </div>
          <h5
            className="flow-text"
          >
            Total Sales
          </h5>
        </div>
      </div>
      <div
        className="order_detail flexbox title-element"
      >
        <h5>
          Order History
        </h5>
        <Search
          caseSensitive={false}
          className="search-input input-field"
          fuzzy={false}
          onChange={[Function]}
          throttle={200}
        />
      </div>
      <AccordionWrapper
        accordion={false}
        className="accordion"
        onChange={[Function]}
      >
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={true}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          />
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <div />
            <DashboardTableContainer
              getOrderMeals={[Function]}
              getOrderMealsTotals={[Function]}
              loading={false}
              onFetchData={[Function]}
              orders={
                Array [
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order1",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order2",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                  Object {
                    "MealsURL": "url",
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order3",
                    "updatedAt": "2018-08-24T16:47:55.783Z",
                    "userId": "userId",
                  },
                ]
              }
              pagination={
                Object {
                  "pages": 1,
                }
              }
            />
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
      </AccordionWrapper>
    </main>
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="modal-content"
      closeTimeoutMS={0}
      contentLabel="Input Modal"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "width": "60%",
          },
        }
      }
    >
      <MealsTable
        closeMealDetailModal={[Function]}
        getTrProps={[Function]}
        loading={false}
        meals={
          Array [
            Object {
              "description": "nice",
              "id": "meal1",
              "imageUrl": "nice",
              "price": 1200,
              "title": "Eba and Egusi",
              "userId": "user1",
            },
            Object {
              "description": "nice",
              "id": "meal2",
              "imageUrl": "nice",
              "price": 2000,
              "title": "Rice and Stew",
              "userId": "user1",
            },
          ]
        }
        mealsPagination={
          Object {
            "limit": 5,
            "offset": 0,
            "pages": 1,
          }
        }
        onFetchData={[Function]}
        total={
          Object {
            "orders": 2,
            "revenue": 100,
            "users": 1,
          }
        }
      />
    </Modal>
  </div>
</div>
`;

exports[`Dashboard Component should map state to props 1`] = `
Object {
  "authenticated": true,
  "daysTotal": Object {
    "orders": 0,
    "revenue": 0,
    "users": 0,
  },
  "loadingMeals": false,
  "meals": Array [],
  "mealsPagination": Object {
    "count": 1,
    "limits": 5,
    "offset": 0,
    "pages": 1,
  },
  "orderConnecting": false,
  "orderError": null,
  "orderMeals": Array [],
  "orderMealsError": null,
  "orders": Array [],
  "pagination": Object {
    "count": 1,
    "limits": 10,
    "offset": 0,
    "pages": 1,
  },
  "total": 0,
  "user": Object {
    "isCaterer": true,
  },
}
`;
